{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dd9679a.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","// jshint esversion: 6\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n\r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    };\r\n\r\n    goToStore = (event) => {\r\n        // 1. stop the form from submitting\r\n        event.preventDefault();\r\n        // 2. get the text from that input\r\n        const storeName = this.myInput.current.value;\r\n        // 3. Change the page to /store/whatever-they-entered\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Please Enter A Store</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    ref={this.myInput}\r\n                    required \r\n                    placeholder=\"Store Name\" \r\n                    defaultValue={getFunName()}\r\n                />\r\n                <button type=\"submit\">Visit Store</button>\r\n            </form>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n            <h1>\r\n                Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                </span>\r\n                Day\r\n            </h1>\r\n            <h3 className=\"tagline\">\r\n                <span>{props.tagline}</span>\r\n            </h3>\r\n        </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\n// class Header extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <header className=\"top\">\r\n//                 <h1>\r\n//                     Catch\r\n//                     <span className=\"ofThe\">\r\n//                         <span className=\"of\">Of</span>\r\n//                         <span className=\"the\">The</span>\r\n//                     </span>\r\n//                     Day\r\n//                 </h1>\r\n//                 <h3 className=\"tagline\">\r\n//                     <span>{this.props.tagline}</span>\r\n//                 </h3>\r\n//             </header>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n    \r\n    static propTypes = {\r\n        fishes: PropTypes.object, \r\n        order: PropTypes.object, \r\n        removeFromOrder: PropTypes.func \r\n    };  \r\n    \r\n    renderOrder = (key) => {\r\n\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: { enter: 500, exit: 500 }\r\n        };\r\n        // make sure the fish is loaded before we continue\r\n        if (!fish) return null;\r\n        if (!isAvailable) {\r\n           return ( \r\n            <CSSTransition \r\n                {...transitionOptions}>\r\n                    <li key={key}> \r\n                        Sorry {fish.name ? fish.name : 'fish'} is no longer available\r\n                    </li>\r\n            </CSSTransition>\r\n           );\r\n        }\r\n        return (\r\n            <CSSTransition {...transitionOptions}>   \r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                         \r\n                        lbs {fish.name}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n               <h2>Order</h2>\r\n               <TransitionGroup component=\"ul\" className=\"order\">\r\n                   {orderIds.map(this.renderOrder)}\r\n               </TransitionGroup>\r\n               <div className=\"total\">\r\n                   Total:\r\n                   <strong>{formatPrice(total)}</strong>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    };\r\n    \r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n    \r\n    createFish = (event) => {\r\n        // 1. stop the form from submitting\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this.props.addFish(fish);\r\n        // refresh the form \r\n        event.currentTarget.reset();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n    \r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            image: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        updateFish: PropTypes.func,\r\n        index: PropTypes.string,\r\n        deleteFish: PropTypes.func\r\n    };\r\n    \r\n    handleChange = (event) => {\r\n        // update that fish\r\n        // 1. take a copy of the current fish\r\n        const updatedFish = { \r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}></textarea>\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Login with Github</button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Login with Facebook</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD3L85_gyP4TzXbZyxzC6J6IdZqaWtVeQU\",\r\n    authDomain: \"catch-of-the-day-radude.firebaseapp.com\",\r\n    projectId: \"catch-of-the-day-radude\",\r\n    databaseURL: \"https://catch-of-the-day-radude-default-rtdb.europe-west1.firebasedatabase.app\"\r\n    // storageBucket: \"catch-of-the-day-radude.appspot.com\",\r\n    // messagingSenderId: \"601433660582\",\r\n    // appId: \"1:601433660582:web:4a5e33d2cf6d826b346867\",\r\n    // measurementId: \"G-6D40PD9VFL\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n    \r\n    static propTypes ={\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func, \r\n        deleteFish: PropTypes.func,\r\n        addFish: PropTypes.func, \r\n        loadSampleFishes: PropTypes.func  \r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        // 1. Look up the current store in the firebase database\r\n        // fetch returns a promise so we need to put await in front of it so we don't save the promise in our const store variable\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store);\r\n        // 2. Claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid // or you can use the email address instead of the uid\r\n            });\r\n        }\r\n        // 3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n        console.log(authData);\r\n    }\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log(\"logging out\");\r\n        await firebase.auth().signOut();\r\n        this.setState({\r\n            uid: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const logout = <button onClick={this.logout}>Log Out!</button>\r\n\r\n        // 1. check if they are logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate}/>;\r\n        }\r\n\r\n        // 2. Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // 3. they must be the owner, just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm \r\n                    key={key} \r\n                    index={key}\r\n                    fish={this.props.fishes[key]} \r\n                    updateFish={this.props.updateFish} \r\n                    deleteFish={this.props.deleteFish}   \r\n                />)}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>\r\n                    Load Sample Fishes\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        // details: PropTypes.object,  --- it's ok but is general\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string, \r\n            name: PropTypes.string,\r\n            desc: PropTypes.string, \r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n    render() {\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button \r\n                    disabled={!isAvailable} \r\n                    onClick={() => this.props.addToOrder(this.props.index)}\r\n                >\r\n                    {isAvailable ? 'Add To Cart' : 'Sold out!'}\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n    \r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\ncomponentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n        this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n        context: this,\r\n        state: 'fishes'\r\n    });\r\n}\r\n\r\ncomponentDidUpdate() {\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n}\r\n\r\ncomponentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n}\r\n\r\n    addFish = (fish) => {\r\n        // 1. take a copy of the existing state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. set the new fishes object to state \r\n        // this.setState({\r\n        //     fishes: fishes\r\n        // });\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // 1. take a copy of the current state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. update thah state\r\n        fishes[key] = updatedFish;\r\n        //3 . set that to state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        // 1. take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. update the state\r\n        // delete fishes.fish1 merge, dar pentru firebase trebuie setat to null\r\n        fishes[key] = null;\r\n        // 3. update state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes: sampleFishes });\r\n    }\r\n    \r\n    addToOrder = (key) => {\r\n        // 1. take a copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. either add to the order or update the number in the order\r\n        order[key] = order[key] + 1 || 1;\r\n        // 3. call setstate to update our state object\r\n        this.setState({ order });\r\n    }\r\n    \r\n    removeFromOrder = (key) => {\r\n        // 1. take a copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. remove that item from order\r\n        // order[key] = null; is not mirroring to firebase so we can use delete\r\n        delete order[key];\r\n        // 3. update the state\r\n        this.setState({ order });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\"/>\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish \r\n                                key={key} \r\n                                index={key}\r\n                                details={this.state.fishes[key]} \r\n                                addToOrder={this.addToOrder} \r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish={this.addFish} \r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!!!</h2>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default NotFound;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\n// import StorePicker from './components/StorePicker';\r\n// import App from './components/App';\r\nimport Router from './components/Router';\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.getElementById('main'));\r\n"],"sourceRoot":""}